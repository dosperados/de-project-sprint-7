Кирилл добрый день!
Хочется конечно получить полноценную проверку проекта и рекомендации по улучшению или наставления, где нужно прокачатсья.

Вопросы:
1. Дописал 4. Задача **Витрина для рекомендации друзей** + сам код в  src/scripts/calculating_friend_recomendation_analitics_job.py.
  алгоритм описан в https://github.com/dosperados/de-project-sprint-7/blob/main/README.md
  по алгоритму есть несколько вопросов они описаны в коде по ходу подсчета метрик и в описании алгоритма.

Создаем df_events_subscription_coordinat с подписками и координатами на основе 
     df_events_subscription_coordinat = df_subscriptions_without_communication as a join df_events_coordinats as b on a.user_id == b.user_left
     df_events_subscription_coordinat = df_subscriptions_without_communication as a join df_events_coordinats as b on a.user_id == b.user_right
     Здесь важный момент - так как мы делаем "рекомендательную витрину друзей" на этом этапе мы получаем множество пересечений интересов
     пользователей соц сети. Т.е. они подписаны на один канал ни разу не общались вместе и бывают в опредленных местах. 
     На следующем этапе мы вычислим дистанцию друг от друга и отфильтруем только те совпадения, где расстояние 1 км и меньше.
     Тут требуется ваша помощь, если вычислять расстояние на всем df то расчет падает. Какие есть методы для вычисления таких полей "distance".
	|-- user_left: long (nullable = false)
	|-- user_right: long (nullable = false)
	|-- lon_left: long (nullable = false)
	|-- lat_left: long (nullable = false)
	|-- lon_right: long (nullable = false)
	|-- lat_right: long (nullable = false)


      #Текущая реализация этого пункта в коде и предложения по их решению.
      #Прошу вашего профессионального совета - правильно ли я делаю этот этап?
      #Логически я хотел создать матрицу интересов пользователей, но представляю что на реальных данных будет слишком большое кол-во данных
      #Возможно нужно брать одно место например самое частое встречающееся (так как я делал округление координат пользователя)
      #либо брать кординаты только последнего события пользователя (тоже считаю хорошим вариантом - так как будет быстрее реагировать на изменения интересов человека)
      df_events_subscription_coordinat = (
          df_subscriptions_without_communication
          .join(df_events_coordinats
              .withColumnRenamed("user_id", "user_left")
              .withColumnRenamed("lon", "lon_left")
              .withColumnRenamed("lat", "lat_left")
              , on=["user_left"] , how="inner")
          .join(df_events_coordinats
              .withColumnRenamed("user_id", "user_right")
              .withColumnRenamed("lon", "lon_right")
              .withColumnRenamed("lat", "lat_right")
              , on=["user_right"] , how="inner")
      )
